version: "3"
services:
  web:
    # replace username/repo:tag with your name and image details
    image: dave4mpls/get-started:part2
    deploy:
      replicas: 5
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
    ports:
      - "8000:80"
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - "/home/ubuntu/data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet
  # to further learn docker, let's see if we can add a virtual
  # mysql server to the mix!
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: testpassword
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
      MYSQL_DATABASE: buslist
    ports:
      - "3306:3306"
    volumes:
      - "/var/lib/mysql:/var/lib/mysql"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - webnet
networks:
  webnet:

